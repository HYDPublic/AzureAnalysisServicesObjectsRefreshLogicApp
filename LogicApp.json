{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "metadata": {
                "description": "Name of the Logic App."
            }
        },
        "logicAppLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "[resourceGroup().location]",
                "australiaeast",
                "australiasoutheast",
                "brazilsouth",
                "centralus",
                "eastasia",
                "eastus",
                "eastus2",
                "japaneast",
                "japanwest",
                "northcentralus",
                "northeurope",
                "southcentralus",
                "southeastasia",
                "westeurope",
                "westus"
            ],
            "metadata": {
                "description": "Location of the Logic App."
            }
        },
        "analysisServicesLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "[resourceGroup().location]",
                "australiaeast",
                "australiasoutheast",
                "brazilsouth",
                "centralus",
                "eastasia",
                "eastus",
                "eastus2",
                "japaneast",
                "japanwest",
                "northcentralus",
                "northeurope",
                "southcentralus",
                "southeastasia",
                "westeurope",
                "westus"
            ],
            "metadata": {
                "description": "Location of the Analysis Services instance."
            }
        },
        "analysisServicesName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "metadata": {
                "description": "Name of the Analysis Services instance."
            }
        },
        "analysisServicesModelName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Name of the AAS model to refresh."
            }
        },
        "analysisServicesResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "minLength": 1,
            "metadata": {
                "description": "Name of the resource group that contains the Analysis Services instance. Only needed when it differs from the Logic App resource group."
            }
        },
        "analysisServicesScaleUpTier": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Developer",
                "Basic",
                "Standard"
            ],
            "metadata": {
                "description": "Service tier to scale up to before refreshing the model."
            }
        },
        "analysisServicesScaleUpLevel": {
            "type": "string",
            "defaultValue": "B2",
            "allowedValues": [
                "D1",
                "B1",
                "B2",
                "S0",
                "S1",
                "S2",
                "S4",
                "S8",
                "S9"
            ],
            "metadata": {
                "description": "Service tier level to scale up to before refreshing the model."
            }
        },
        "analysisServicesScaleDownTier": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Developer",
                "Basic",
                "Standard"
            ],
            "metadata": {
                "description": "Service tier to scale down to after refreshing the model."
            }
        },
        "analysisServicesScaleDownLevel": {
            "type": "string",
            "defaultValue": "B1",
            "allowedValues": [
                "D1",
                "B1",
                "B2",
                "S0",
                "S1",
                "S2",
                "S4",
                "S8",
                "S9"
            ],
            "metadata": {
                "description": "Service tier level to scale down to after refreshing the model."
            }
        },
        "servicePrincipalClientId": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Service Principal Client ID."
            }
        },
        "servicePrincipalClientSecret": {
            "type": "securestring",
            "minLength": 1,
            "metadata": {
                "description": "Service Principal Client Secret."
            }
        },
        "azureActiveDirectoryTenantId": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Azure AD Tenant ID."
            }
        }
    },
    "variables": {
        "analysisServicesArmUri": "[concat('https://management.azure.com', resourceId(subscription().subscriptionId, parameters('analysisServicesResourceGroupName'), 'Microsoft.AnalysisServices/servers' , parameters('analysisServicesName')), '?api-version=2016-05-16')]",
        "analysisServicesRefreshUri": "[concat('https://', parameters('analysisServicesLocation'), '.asazure.windows.net/servers/', parameters('analysisServicesName'), '/models/', parameters('analysisServicesModelName'), '/refreshes')]"
    },
    "resources": [
        {
            "name": "[parameters('logicAppName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[parameters('logicAppLocation')]",
            "tags": {
                "displayName": "LogicApp"
            },
            "apiVersion": "2016-06-01",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Check_if_refresh_succeeded": {
                            "actions": {},
                            "description": "If the refresh was not successful we set the status of the Logic App to 'failed'. ",
                            "else": {
                                "actions": {
                                    "Terminate_when_refresh_failed": {
                                        "inputs": {
                                            "runError": {
                                                "message": "Refresh failed on @{body('Parse_POST_refresh_response_body')?['endTime']} with status '@{body('Parse_POST_refresh_response_body')?['status']}'."
                                            },
                                            "runStatus": "Failed"
                                        },
                                        "runAfter": {},
                                        "type": "Terminate"
                                    }
                                }
                            },
                            "expression": "@equals(body('Parse_POST_refresh_response_body')?['status'], 'succeeded')",
                            "runAfter": {
                                "Parse_POST_refresh_response_body": [
                                    "Succeeded",
                                    "Skipped"
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_upscalingFinished_variable": {
                            "description": "This variable is used to stop the 'do untill' loop statement when upscaling of AAS is finished.",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "upscalingFinished",
                                        "type": "Boolean",
                                        "value": "@false"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "POST_refresh": {
                            "description": "With this HTTP POST request to the AAS REST API we trigger a full refresh of the model. This refresh happens async. The Logic App will handle this correctly and will continue when the refresh is finished.",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://*.asazure.windows.net",
                                    "clientId": "[parameters('servicePrincipalClientId')]",
                                    "secret": "[parameters('servicePrincipalClientSecret')]",
                                    "tenant": "[parameters('azureActiveDirectoryTenantId')]",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": {
                                    "CommitMode": "transactional",
                                    "MaxParallelism": 2,
                                    "Objects": [],
                                    "RetryCount": 2,
                                    "Type": "Full"
                                },
                                "method": "POST",
                                "uri": "[variables('analysisServicesRefreshUri')]"
                            },
                            "runAfter": {
                                "Until_scaling_is_finished": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Parse_POST_refresh_response_body": {
                            "description": "Here we parse the response of the AAS REST API. This enables easy access to the response objects.",
                            "inputs": {
                                "content": "@body('POST_refresh')",
                                "schema": {
                                    "properties": {
                                        "currentRefreshType": {
                                            "type": "string"
                                        },
                                        "endTime": {
                                            "type": "string"
                                        },
                                        "objects": {
                                            "items": {
                                                "properties": {
                                                    "partition": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "table": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "startTime": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "Scale_down_AAS": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "Scale_down_AAS": {
                            "description": "With this HTTP PATCH request to the Azure Resource Management API we scale up the AAS instance. This action should always run.",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.core.windows.net/",
                                    "clientId": "[parameters('servicePrincipalClientId')]",
                                    "secret": "[parameters('servicePrincipalClientSecret')]",
                                    "tenant": "[parameters('azureActiveDirectoryTenantId')]",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": {
                                    "sku": {
                                        "name": "[parameters('analysisServicesScaleDownLevel')]",
                                        "tier": "[parameters('analysisServicesScaleDownTier')]"
                                    }
                                },
                                "method": "PATCH",
                                "uri": "[variables('analysisServicesArmUri')]"
                            },
                            "runAfter": {
                                "POST_refresh": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "Http"
                        },
                        "Scale_up_AAS": {
                            "description": "With this HTTP PATCH request to the Azure Resource Management API we scale up the AAS instance.",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.core.windows.net/",
                                    "clientId": "[parameters('servicePrincipalClientId')]",
                                    "secret": "[parameters('servicePrincipalClientSecret')]",
                                    "tenant": "[parameters('azureActiveDirectoryTenantId')]",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": {
                                    "sku": {
                                        "name": "[parameters('analysisServicesScaleUpLevel')]",
                                        "tier": "[parameters('analysisServicesScaleUpTier')]"
                                    }
                                },
                                "method": "PATCH",
                                "uri": "[variables('analysisServicesArmUri')]"
                            },
                            "runAfter": {
                                "Initialize_upscalingFinished_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Until_scaling_is_finished": {
                            "actions": {
                                "Check_whether_scaling_is_finished": {
                                    "actions": {
                                        "Set_variable": {
                                            "inputs": {
                                                "name": "upscalingFinished",
                                                "value": "@true"
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": "@equals(body('Parse_AAS_scaling_status')?['properties']?['provisioningState'], 'Succeeded')",
                                    "runAfter": {
                                        "Parse_AAS_scaling_status": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Delay": {
                                    "inputs": {
                                        "interval": {
                                            "count": 1,
                                            "unit": "Minute"
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Wait"
                                },
                                "GET_AAS_scaling_status": {
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://management.core.windows.net/",
                                            "clientId": "[parameters('servicePrincipalClientId')]",
                                            "secret": "[parameters('servicePrincipalClientSecret')]",
                                            "tenant": "[parameters('azureActiveDirectoryTenantId')]",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "method": "GET",
                                        "uri": "[variables('analysisServicesArmUri')]"
                                    },
                                    "runAfter": {
                                        "Delay": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http"
                                },
                                "Parse_AAS_scaling_status": {
                                    "inputs": {
                                        "content": "@body('GET_AAS_scaling_status')",
                                        "schema": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "location": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "properties": {
                                                    "properties": {
                                                        "asAdministrators": {
                                                            "properties": {
                                                                "members": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "managedMode": {
                                                            "type": "number"
                                                        },
                                                        "provisioningState": {
                                                            "type": "string"
                                                        },
                                                        "serverFullName": {
                                                            "type": "string"
                                                        },
                                                        "serverMonitorMode": {
                                                            "type": "number"
                                                        },
                                                        "state": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "sku": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "tier": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "tags": {
                                                    "properties": {},
                                                    "type": "object"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "runAfter": {
                                        "GET_AAS_scaling_status": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson"
                                }
                            },
                            "expression": "@equals(variables('upscalingFinished'), true)",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "runAfter": {
                                "Scale_up_AAS": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Until"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "description": "This is the actual trigger for the Logic App. Can be triggered manually or via an HTTP POST request.",
                            "inputs": {
                                "schema": {}
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {}
            }
        }
    ],
    "outputs": {}
}